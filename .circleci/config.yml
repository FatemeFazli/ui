version: 2
jobs:
  build_web:
    docker:
      # specify the version
      - image: node:latest
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/angular-cli-circleci
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-web{{ checksum "package-lock.json" }}
      - run:
          name: install packages
          command: npm install
      - save_cache:
          key: dependency-cache-web{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: build web app
          command: ./node_modules/@angular/cli/bin/ng build --prod
  build_android:
    docker:
      - image: erfun/gitlab-ci-android-26:latest

    working_directory: ~/angular-cli-circleci
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-android{{ checksum "package-lock.json" }}
      - run:
          name: install packages
          command: npm install
      - run:
          name: build android
          command: |
              cd cordova
              mkdir www
              npm install -g cordova
              npm install
              cordova platform add android
              cordova build android
              curl -s -F channels="ci" -F file=@"/root/angular-cli-circleci/cordova/platforms/android/app/build/outputs/apk/debug/app-debug.apk" -F initial_comment="Aew App ${CIRCLE_PROJECT_USERNAME} ${CIRCLE_PROJECT_REPONAME} ${CIRCLE_SHA1}" -F token=${SLACK_TOKEN} https://slack.com/api/files.upload
      - save_cache:
          key: dependency-cache-android{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
            - ./cordova/node_modules
            - /root/.gradle
  deploy:
    docker:
      - image: node:latest
    working_directory: ~/angular-cli-circleci
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-deploy{{ checksum "package-lock.json" }}
      - run:
          name: install packages
          command: npm install
      - save_cache:
          key: dependency-cache-deploy{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: build web app
          command: ./node_modules/@angular/cli/bin/ng build --prod

      # build and push Docker image
      - setup_remote_docker
      - run:
          name: build and push Docker image
          command: |
            curl -fsSL get.docker.com -o get-docker.sh
            sh get-docker.sh
            TAG=0.1.$CIRCLE_BUILD_NUM
            docker build -t hesabfun/ui:$TAG .
            docker tag hesabfun/ui:$TAG hesabfun/ui:latest
            docker login -u="$DOCKER_USER" -p="$DOCKER_PASS"
            docker push hesabfun/ui:$TAG
            docker push hesabfun/ui:latest

# Check https://circleci.com/docs/2.0/workflows/ for more details
workflows:
  version: 2
  build_and_test:
    jobs:
      - build_web
      - build_android
      - deploy:
          requires:
            - build_web
